<%
jagg.block("application/application-view", {
    initializer:function (data) {

    },

    getOutputs:function (inputs) {
        user = jagg.getUser();
        var application = null;
        var oauthapp = null;
        var scopes = [];
        var scopeList = [];
        var grant_types = [];
        var applicationId = null;
        if (user) {
            username = user.username;
            var applicationName = request.getParameter("name");
            var groupId = session.get("groupId");

            mod = jagg.module("application");
            result = mod.getApplicationByName(username,applicationName,groupId);
            application = result.application;
            applicationId = application.id;

            var result2 = jagg.module("subscription").getAllSubscriptionsOfApplication(username, applicationName, 0, 10);
            var scopesResult = jagg.module("subscription").getAllScopesOfApplicationSubscription(username, applicationId);

            if (!scopesResult.error) {
                for (i = 0; i < scopesResult.result.size(); i++) {
                    scopeList.push({"scopeKey": scopesResult.result.get(i).get("scopeKey"), "scopeName":
                    scopesResult.result.get(i).get("scopeName")});
                }
            }

            if (Object.keys(result2.result).length > 0){
                //@todo handle error
                result2 = result2.result;
                for(i=0;i < result2.applications.length;i++){
                    if(result2.applications[i].name == applicationName){
                        oauthapp = result2.applications[i];
                        scopes = scopeList;
                    }
                }
            }

            grant_types = mod.getAllowedGrantTypes();
        }

        var tiers, result;
        result = jagg.module("tiers").getApplicationTiers();
        tiers = result.tiers;

        var store = jagg.module("manager").getAPIStoreObj();
        gatewayURL = store.getHTTPsGatewayEndpointURLs();
        gatewayTypeURL = store.getHTTPSGatewayEndpointURLsWithType();
        var gatewayURLType = JSON.parse(gatewayTypeURL)

        return {
            "tiers":tiers,
            "gatewayurl":gatewayURL[0],
            "gatewayTypeurl": gatewayURLType,
            "application" : application,
            "scopes": scopes,
            "oauthapp": oauthapp,
            "grant_types":grant_types
        };

    }
});
%>
